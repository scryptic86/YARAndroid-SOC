// Generated by view binder compiler. Do not edit!
package com.netsec.clamav.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import com.netsec.clamav.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final MaterialButton downloadButton;

  @NonNull
  public final TextView downloadedSizeTextView;

  @NonNull
  public final MaterialButton fileSelectorButton;

  @NonNull
  public final CircularProgressIndicator progressIndicator;

  @NonNull
  public final TextView scanCompleteTextView;

  @NonNull
  public final RecyclerView scanHistoryRecyclerView;

  @NonNull
  public final TextView scanHistoryTitle;

  @NonNull
  public final MaterialButton scanNowButton;

  @NonNull
  public final TextView selectedFileTextView;

  @NonNull
  public final MaterialButton uploadButton;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout container, @NonNull MaterialButton downloadButton,
      @NonNull TextView downloadedSizeTextView, @NonNull MaterialButton fileSelectorButton,
      @NonNull CircularProgressIndicator progressIndicator, @NonNull TextView scanCompleteTextView,
      @NonNull RecyclerView scanHistoryRecyclerView, @NonNull TextView scanHistoryTitle,
      @NonNull MaterialButton scanNowButton, @NonNull TextView selectedFileTextView,
      @NonNull MaterialButton uploadButton) {
    this.rootView = rootView;
    this.container = container;
    this.downloadButton = downloadButton;
    this.downloadedSizeTextView = downloadedSizeTextView;
    this.fileSelectorButton = fileSelectorButton;
    this.progressIndicator = progressIndicator;
    this.scanCompleteTextView = scanCompleteTextView;
    this.scanHistoryRecyclerView = scanHistoryRecyclerView;
    this.scanHistoryTitle = scanHistoryTitle;
    this.scanNowButton = scanNowButton;
    this.selectedFileTextView = selectedFileTextView;
    this.uploadButton = uploadButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout container = (ConstraintLayout) rootView;

      id = R.id.downloadButton;
      MaterialButton downloadButton = ViewBindings.findChildViewById(rootView, id);
      if (downloadButton == null) {
        break missingId;
      }

      id = R.id.downloadedSizeTextView;
      TextView downloadedSizeTextView = ViewBindings.findChildViewById(rootView, id);
      if (downloadedSizeTextView == null) {
        break missingId;
      }

      id = R.id.fileSelectorButton;
      MaterialButton fileSelectorButton = ViewBindings.findChildViewById(rootView, id);
      if (fileSelectorButton == null) {
        break missingId;
      }

      id = R.id.progressIndicator;
      CircularProgressIndicator progressIndicator = ViewBindings.findChildViewById(rootView, id);
      if (progressIndicator == null) {
        break missingId;
      }

      id = R.id.scanCompleteTextView;
      TextView scanCompleteTextView = ViewBindings.findChildViewById(rootView, id);
      if (scanCompleteTextView == null) {
        break missingId;
      }

      id = R.id.scanHistoryRecyclerView;
      RecyclerView scanHistoryRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (scanHistoryRecyclerView == null) {
        break missingId;
      }

      id = R.id.scanHistoryTitle;
      TextView scanHistoryTitle = ViewBindings.findChildViewById(rootView, id);
      if (scanHistoryTitle == null) {
        break missingId;
      }

      id = R.id.scanNowButton;
      MaterialButton scanNowButton = ViewBindings.findChildViewById(rootView, id);
      if (scanNowButton == null) {
        break missingId;
      }

      id = R.id.selectedFileTextView;
      TextView selectedFileTextView = ViewBindings.findChildViewById(rootView, id);
      if (selectedFileTextView == null) {
        break missingId;
      }

      id = R.id.uploadButton;
      MaterialButton uploadButton = ViewBindings.findChildViewById(rootView, id);
      if (uploadButton == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, container, downloadButton,
          downloadedSizeTextView, fileSelectorButton, progressIndicator, scanCompleteTextView,
          scanHistoryRecyclerView, scanHistoryTitle, scanNowButton, selectedFileTextView,
          uploadButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
